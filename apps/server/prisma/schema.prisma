// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  userId                Int            @id @default(autoincrement())
  name                  String
  email                 String         @unique
  password              String
  profilePic            String?
  createdAt             DateTime       @default(now())
  updatedAt             DateTime       @updatedAt
  messages              Message[]
  conversationsReceived Conversation[] @relation("receiver")
  conversatonsSent      Conversation[] @relation("sender")
}

model Message {
  messageId      Int          @id @default(autoincrement())
  text           String?
  imageUrl       String?
  videoUrl       String?
  seen           Boolean      @default(false)
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  userId         Int
  conversationId Int
  user           User         @relation(fields: [userId], references: [userId])
  conversation   Conversation @relation(fields: [conversationId], references: [conversationId])
}

model Conversation {
  conversationId Int       @id @default(autoincrement())
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  receiverId     Int
  receiver       User      @relation(name: "receiver", fields: [receiverId], references: [userId])
  senderId       Int
  sender         User      @relation(name: "sender", fields: [senderId], references: [userId])
  messages       Message[]
}
